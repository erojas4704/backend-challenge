{"version":3,"sources":["components/StreamingNavbar.js","components/LinkCard.js","Routes/Home.js","actions/types.js","utils/formatTitleURL.js","Routes/ContentView.js","actions/api.js","App.js","reportWebVitals.js","reducers/contentReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["StreamingNavbar","Navbar","bg","variant","className","Brand","to","Collapse","LinkCard","text","endpoint","image","Card","style","width","textDecoration","Img","src","Title","Home","Container","Row","GET_CONTENT","GET_CONTENT_SUCCESS","GET_CONTENT_FAILURE","formatTitleURL","title","toLowerCase","replace","ContentView","filter","dispatch","useDispatch","data","useSelector","state","content","useEffect","a","type","axios","get","response","payload","loading","error","message","map","images","url","uuid","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","movies","series","filterContent","programType","item","contentReducer","action","entries","combineReducers","persistedReducer","persistReducer","key","storage","stateReconciler","autoMergeLevel2","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","ReactDOM","render","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.9f3b0ebb.chunk.js","sourcesContent":["import { Navbar } from 'react-bootstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function StreamingNavbar() {\r\n    return (<div>\r\n        <Navbar bg=\"primary\" variant=\"primary\" className=\"px-3 py-0\">\r\n            <Navbar.Brand><NavLink className=\"text-light nav-link\" to=\"/\">DEMO Streaming</NavLink></Navbar.Brand>\r\n            <Navbar.Collapse className=\"d-flex justify-content-end\">\r\n                <NavLink className=\"text-light nav-link\" to=\"/Login\">Log in</NavLink>\r\n                <NavLink className=\"btn btn-dark rounded-0\" variant=\"dark\" to=\"/Trial\">Start your free trial</NavLink>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </div>\r\n    )\r\n}","import Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LinkCard({ text, endpoint, image }) {\r\n    return (\r\n        <Card className=\"m-3 p-0 border-0\" style={{ width: '12rem' }}>\r\n            <Link to={endpoint} style={{ textDecoration: 'none' }}>\r\n                <Card.Img variant=\"top\" className=\"bg-dark\" src={ image || \"/placeholder.png\"} />\r\n                <Card.Title>\r\n                    {text}\r\n                </Card.Title>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}","import { Container, Row } from \"react-bootstrap\";\r\nimport LinkCard from \"../components/LinkCard\";\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <LinkCard endpoint=\"/series\" text=\"Best Series\" image=\"/placeholder.png\" />\r\n                <LinkCard endpoint=\"/movies\" text=\"Popular Titles\" image=\"/placeholder.png\" />\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","export const GET_CONTENT = 'GET_CONTENT';\r\nexport const GET_CONTENT_SUCCESS = 'GET_CONTENT_SUCCESS';\r\nexport const GET_CONTENT_FAILURE = 'GET_CONTENT_FAILURE';","export default function formatTitleURL(title) {\r\n    return title.toLowerCase().replace(/\\s/g, '_');\r\n}","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getContentFromServer } from \"../actions/api\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport LinkCard from \"../components/LinkCard\";\r\nimport formatTitleURL from \"../utils/formatTitleURL\";\r\nimport { Navbar, Row } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport default function ContentView({ filter, title }) {\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.content);\r\n\r\n    useEffect(() => {\r\n        dispatch(getContentFromServer());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"px-3 py-0\">\r\n                <Navbar.Brand className=\"nav-link\">{title}</Navbar.Brand>\r\n            </Navbar>\r\n            <Container>\r\n                <h1 className=\"my-3\">{title}</h1>\r\n                {data.loading && <p>Loading...</p>}\r\n                {data.error && <p className=\"text-danger\">{data.error.message}</p>}\r\n                <Row>\r\n                    {data[filter] &&\r\n                        data[filter].map(content => (\r\n                            <LinkCard key={uuid()} text={content.title} image={content.images[\"Poster Art\"].url} endpoint={formatTitleURL(content.title)}>\r\n                            </LinkCard>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}","import { GET_CONTENT, GET_CONTENT_FAILURE, GET_CONTENT_SUCCESS } from \"./types\";\r\nimport axios from 'axios';\r\n\r\nconst getContentFromServer = () => {\r\n    return async dispatch => {\r\n        dispatch({ type: GET_CONTENT });\r\n        try {\r\n            const response = await axios.get(\"/api/content\");\r\n            dispatch({ type: GET_CONTENT_SUCCESS, payload: response.data });\r\n        } catch (err) {\r\n            dispatch({ type: GET_CONTENT_FAILURE, payload: err });\r\n        }\r\n    }\r\n}\r\n\r\nexport { getContentFromServer };","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport StreamingNavbar from './components/StreamingNavbar';\nimport Home from './Routes/Home';\nimport ContentView from './Routes/ContentView';\n\nfunction App() {\n    return (\n        <Router>\n            <StreamingNavbar />\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                <Route exact path=\"/Series\" element={<ContentView filter=\"series\" title=\"Best Series\" />} />\n                <Route exact path=\"/Movies\" element={<ContentView filter=\"movies\" title=\"Popular Titles\" />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_CONTENT, GET_CONTENT_FAILURE, GET_CONTENT_SUCCESS } from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n    movies: [],\r\n    series: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst filterContent = (content, programType) => {\r\n    return content.filter(item => item.programType === programType);\r\n}\r\n\r\nconst contentReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_CONTENT:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n                movies: [],\r\n                series: []\r\n            }\r\n        case GET_CONTENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                movies: filterContent(action.payload.entries, \"movie\"),\r\n                series: filterContent(action.payload.entries, \"series\"),\r\n                loading: false\r\n            }\r\n        case GET_CONTENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false,\r\n                content: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default contentReducer;","import { combineReducers } from \"redux\";\r\nimport contentReducer from \"./contentReducer\";\r\n\r\nexport default combineReducers({\r\n    content: contentReducer\r\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport const persistedReducer = persistReducer({\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}, rootReducer);\r\n\r\nexport const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport const persistedStore = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistedStore, store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <PersistGate persistor={persistedStore}>\n        <App />\n      </PersistGate>\n    </React.StrictMode>\n  </Provider >,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}